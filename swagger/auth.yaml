openapi: 3.0.1
info:
  title: Rodauth
  description: This lists all the endpoints provided by Rodauth features.
  version: 2.38.0
externalDocs:
  description: Rodauth documentation
  url: https://rodauth.jeremyevans.net/documentation.html
tags:
- name: Login
  externalDocs:
    description: Feature documentation
    url: http://rodauth.jeremyevans.net/rdoc/files/doc/login_rdoc.html
- name: Create Account
  externalDocs:
    description: Feature documentation
    url: http://rodauth.jeremyevans.net/rdoc/files/doc/create_account_rdoc.html
- name: Logout
  externalDocs:
    description: Feature documentation
    url: http://rodauth.jeremyevans.net/rdoc/files/doc/logout_rdoc.html
- name: Lockout
  externalDocs:
    description: Feature documentation
    url: http://rodauth.jeremyevans.net/rdoc/files/doc/lockout_rdoc.html
- name: JWT Refresh
  externalDocs:
    description: Feature documentation
    url: http://rodauth.jeremyevans.net/rdoc/files/doc/jwt_refresh_rdoc.html
paths:
  "/login":
    post:
      tags:
      - Login
      summary: Perform login
      description: |
        ```ruby
        rodauth.login_route #=> "login"
        rodauth.login_path #=> "/login"
        rodauth.login_url #=> "https://example.com/login"

        rodauth.current_route #=> :login (in the request)
        ```
      responses:
        '200':
          description: successful login
        '401':
          description: no matching login, invalid password
        '403':
          description: unverified account, account locked out
      parameters:
      - name: login
        in: query
        description: Email address for the account
        required: true
        style: form
        example: user@example.com
        schema:
          type: string
      - name: password
        in: query
        description: Password for the account
        required: true
        style: form
        example: secret123
        schema:
          type: string
  "/create-account":
    post:
      tags:
      - Create Account
      summary: Perform registration
      description: |
        ```ruby
        rodauth.create_account_route #=> "create-account"
        rodauth.create_account_path #=> "/create-account"
        rodauth.create_account_url #=> "https://example.com/create-account"

        rodauth.current_route #=> :create_account (in the request)
        ```
      responses:
        '200':
          description: successful registration
        '422':
          description: invalid login, logins do not match, invalid password, passwords
            do not match
      parameters:
      - name: login
        in: query
        description: Email address for the account
        required: true
        style: form
        example: user@example.com
        schema:
          type: string
      - name: login-confirm
        in: query
        description: Email address confirmation
        required: true
        style: form
        example: user@example.com
        schema:
          type: string
      - name: password
        in: query
        description: Password to set
        required: true
        style: form
        example: secret123
        schema:
          type: string
      - name: password-confirm
        in: query
        description: Password confirmation
        required: true
        style: form
        example: secret123
        schema:
          type: string
  "/logout":
    post:
      tags:
      - Logout
      summary: Perform logout
      description: |
        ```ruby
        rodauth.logout_route #=> "logout"
        rodauth.logout_path #=> "/logout"
        rodauth.logout_url #=> "https://example.com/logout"

        rodauth.current_route #=> :logout (in the request)
        ```
      responses:
        '200':
          description: successful logout
      parameters:
      - name: refresh_token
        in: query
        description: JWT refresh token to delete ("all" deletes all tokens)
        required: false
        style: form
        schema:
          type: string
  "/unlock-account-request":
    post:
      tags:
      - Lockout
      summary: Perform account unlock request
      description: |
        ```ruby
        rodauth.unlock_account_request_route #=> "unlock-account-request"
        rodauth.unlock_account_request_path #=> "/unlock-account-request"
        rodauth.unlock_account_request_url #=> "https://example.com/unlock-account-request"

        rodauth.current_route #=> :unlock_account_request (in the request)
        ```
      responses:
        '200':
          description: successfully sent unlock account email
        '401':
          description: no matching login
        '400':
          description: email recently sent
      parameters:
      - name: login
        in: query
        description: Email address for the account
        required: true
        style: form
        example: user@example.com
        schema:
          type: string
  "/unlock-account":
    post:
      tags:
      - Lockout
      summary: Perform account unlock
      description: |
        ```ruby
        rodauth.unlock_account_route #=> "unlock-account"
        rodauth.unlock_account_path #=> "/unlock-account"
        rodauth.unlock_account_url #=> "https://example.com/unlock-account"

        rodauth.current_route #=> :unlock_account (in the request)
        ```
      responses:
        '200':
          description: account successfully unlocked
        '401':
          description: invalid or expired unlock account key
      parameters:
      - name: key
        in: query
        description: Account unlock token
        required: true
        style: form
        example: "{account_id}_{key_hmac}"
        schema:
          type: string
  "/jwt-refresh":
    post:
      tags:
      - JWT Refresh
      summary: Refresh JWT access token
      description: |
        ```ruby
        rodauth.jwt_refresh_route #=> "jwt-refresh"
        rodauth.jwt_refresh_path #=> "/jwt-refresh"
        rodauth.jwt_refresh_url #=> "https://example.com/jwt-refresh"

        rodauth.current_route #=> :jwt_refresh (in the request)
        ```
      responses:
        '200':
          description: ''
          content:
            application/json:
              example:
                refresh_token: "..."
                access_token: "..."
        '401':
          description: no JWT access token provided
        '400':
          description: invalid JWT refresh token
      parameters:
      - name: refresh_token
        in: query
        description: JWT refresh token
        required: true
        style: form
        schema:
          type: string
